{"version":3,"file":"pageValidacion.f31affbd.js","sources":["../../src/pages/pageValidacion.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Stack, Button, Typography } from \"@mui/material\";\r\nimport { useAuth } from \"../context/authContext\";\r\nimport { useNavigate } from \"react-router-dom\"; // Importa useNavigate\r\nimport axios from \"axios\"; // Importar axios para hacer la solicitud HTTP\r\n\r\nconst PageValidacion = () => {\r\n  const { User } = useAuth(); // Obtener el usuario \r\n  const [loading, setLoading] = useState(false); // Para controlar el estado de la solicitud\r\n  const [message, setMessage] = useState(\"\"); // Para mostrar mensajes de éxito o error\r\n  const [verified, setVerified] = useState(false); // Para saber si el código fue verificado\r\n  const navigate = useNavigate(); // Inicializa el hook de navegación\r\n\r\n  const handleSendVerificationEmail = async () => {\r\n    if (!User?.email) {\r\n      setMessage(\"No se encontró el correo electrónico del usuario.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // Activar el estado de carga\r\n    try {\r\n      // Hacer la solicitud al backend para enviar el correo de verificación\r\n      const response = await axios.post(\r\n        \"http://localhost:3001/verification/send-email\",\r\n        {\r\n          email: User.email,\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setMessage(\"Correo de verificación enviado con éxito.\");\r\n      } else {\r\n        setMessage(\"Hubo un problema al enviar el correo.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al enviar el correo de verificación:\", error);\r\n      setMessage(\"Hubo un error al enviar el correo de verificación.\");\r\n    } finally {\r\n      setLoading(false); // Desactivar el estado de carga\r\n    }\r\n  };\r\n\r\n  const handleVerifyCode = async (token) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `http://localhost:3001/verification/verify-email?token=${token}`\r\n      );\r\n\r\n      if (response.status === 200 && response.data.pass) {\r\n        setVerified(true); // Marcar como verificado\r\n        setMessage(\"Correo verificado correctamente.\");\r\n      } else {\r\n        setMessage(\"El código de verificación no es válido.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al verificar el código:\", error);\r\n      setMessage(\"Hubo un error al verificar el código.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Extraer el token de la URL\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const token = urlParams.get(\"token\");\r\n\r\n    if (token) {\r\n      handleVerifyCode(token); // Verificar código al cargar la página si tiene token\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Modal\r\n      open={true} // Siempre abierto si no está verificado\r\n      hideBackdrop={false}\r\n      sx={{\r\n        bgcolor: \"rgba(33, 33, 33, 0.7)\", // Fondo oscuro\r\n        backdropFilter: \"blur(5px)\", // Efecto de desenfoque\r\n      }}\r\n    >\r\n      <Stack\r\n        spacing={3}\r\n        sx={{\r\n          position: \"absolute\",\r\n          left: \"50%\",\r\n          top: \"50%\",\r\n          transform: \"translate(-50%, -50%)\", // Centrar el modal\r\n          bgcolor: \"#000\", // Fondo negro\r\n          padding: 4,\r\n          borderRadius: 2,\r\n          boxShadow: 24,\r\n          width: 320,\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" color=\"white\">\r\n          Verificar Correo Electrónico\r\n        </Typography>\r\n\r\n        {/* Mostrar correo del usuario en la parte superior */}\r\n        <Typography variant=\"h6\" color=\"white\">\r\n          {User?.email}{\" \"}\r\n          {/* Asegúrate de que \"User\" tenga la propiedad \"email\" */}\r\n        </Typography>\r\n\r\n        <Typography variant=\"body2\" color=\"white\" sx={{ marginBottom: 2 }}>\r\n          Por favor, verifica tu correo electrónico antes de continuar.\r\n        </Typography>\r\n\r\n        {/* Mostrar el mensaje de estado */}\r\n        {message && (\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={\r\n              message.includes(\"éxito\") || message.includes(\"verificado\")\r\n                ? \"green\"\r\n                : \"red\"\r\n            }\r\n            sx={{ marginBottom: 2 }}\r\n          >\r\n            {message}\r\n          </Typography>\r\n        )}\r\n\r\n        {/* Si el código ha sido verificado, quitar el botón */}\r\n        {!verified && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            size=\"large\"\r\n            sx={{\r\n              width: \"80%\",\r\n              alignSelf: \"center\", // Centra el botón horizontalmente\r\n              borderRadius: \"20px\", // Bordes redondeados\r\n              backgroundColor: \"#E5533D\", // Color naranja\r\n              \":hover\": {\r\n                backgroundColor: \"#C4452F\", // Naranja más oscuro al pasar el cursor\r\n              },\r\n            }}\r\n            onClick={handleSendVerificationEmail} // Enviar el correo cuando se haga clic en el botón\r\n            disabled={loading} // Deshabilitar el botón mientras se está enviando el correo\r\n          >\r\n            {loading ? \"Enviando...\" : \"Enviar Correo de Verificación\"}\r\n          </Button>\r\n        )}\r\n\r\n        {/* Botón de Ir a Inicio, solo visible si el correo ha sido verificado */}\r\n        {verified && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            sx={{\r\n              width: \"80%\",\r\n              alignSelf: \"center\", // Centra el botón horizontalmente\r\n              borderRadius: \"20px\", // Bordes redondeados\r\n              backgroundColor: \"#E5533D\", // Color naranja (igual que el anterior)\r\n              \":hover\": {\r\n                backgroundColor: \"#C4452F\", // Naranja más oscuro al pasar el cursor\r\n              },\r\n              marginTop: 2, // Espacio entre los botones\r\n            }}\r\n            onClick={() => navigate(\"/Login\")} // Redirige al inicio usando navigate\r\n          >\r\n            Ir a Inicio\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PageValidacion;\r\n"],"names":["PageValidacion","User","useAuth","loading","setLoading","useState","message","setMessage","verified","setVerified","navigate","useNavigate","handleSendVerificationEmail","email","axios","post","status","error","handleVerifyCode","token","response","data","pass","useEffect","URLSearchParams","window","location","search","get","Modal","open","hideBackdrop","sx","bgcolor","backdropFilter","children","Stack","spacing","position","left","top","transform","padding","borderRadius","boxShadow","width","textAlign","_jsx","Typography","variant","color","_jsxs","marginBottom","includes","Button","size","alignSelf","backgroundColor","onClick","disabled","marginTop"],"mappings":"4GAMA,MAAMA,EAAiBA,IAAM,CACrB,KAAA,CAAEC,KAAAA,GAASC,EAAQ,EACnB,CAACC,EAASC,CAAU,EAAIC,mBAAS,EAAK,EACtC,CAACC,EAASC,CAAU,EAAIF,mBAAS,EAAE,EACnC,CAACG,EAAUC,CAAW,EAAIJ,mBAAS,EAAK,EACxCK,EAAWC,IAEXC,EAA8B,SAAY,CAC1C,GAAA,EAACX,GAAAA,MAAAA,EAAMY,OAAO,CAChBN,EAAW,yDAAmD,EAC9D,MACF,CAEAH,EAAW,EAAI,EACX,GAAA,EAEe,MAAMU,EAAMC,KAC3B,gDACA,CACEF,MAAOZ,EAAKY,KAAAA,CAEhB,GAEaG,SAAW,IACtBT,EAAW,iDAA2C,EAEtDA,EAAW,uCAAuC,QAE7CU,GACCA,QAAAA,MAAM,gDAA8CA,CAAK,EACjEV,EAAW,uDAAoD,CAAA,QACvD,CACRH,EAAW,EAAK,CAClB,CAAA,EAGIc,EAAmB,MAAOC,GAAU,CACpC,GAAA,CACF,MAAMC,EAAW,MAAMN,EAAMC,KAC3B,yDAAyDI,GAC3D,EAEIC,EAASJ,SAAW,KAAOI,EAASC,KAAKC,MAC3Cb,EAAY,EAAI,EAChBF,EAAW,kCAAkC,GAE7CA,EAAW,kDAAyC,QAE/CU,GACCA,QAAAA,MAAM,mCAAiCA,CAAK,EACpDV,EAAW,0CAAuC,CACpD,CAAA,EAGFgB,OAAAA,EAAAA,QAAAA,UAAU,IAAM,CAGRJ,MAAAA,EADY,IAAIK,gBAAgBC,OAAOC,SAASC,MAAM,EACpCC,IAAI,OAAO,EAE/BT,GACFD,EAAiBC,CAAK,CAE1B,EAAG,CAAE,CAAA,IAGFU,EAAK,CACJC,KAAM,GACNC,aAAc,GACdC,GAAI,CACFC,QAAS,wBACTC,eAAgB,WAClB,EAAEC,WAEDC,EAAK,CACJC,QAAS,EACTL,GAAI,CACFM,SAAU,WACVC,KAAM,MACNC,IAAK,MACLC,UAAW,wBACXR,QAAS,OACTS,QAAS,EACTC,aAAc,EACdC,UAAW,GACXC,MAAO,IACPC,UAAW,QACb,EAAEX,SAAA,CAEFY,EAACC,EAAU,CAACC,QAAQ,KAAKC,MAAM,QAAOf,SAAC,iCAAA,CAE3B,EAGZgB,EAACH,EAAU,CAACC,QAAQ,KAAKC,MAAM,QAAOf,SACnClC,CAAAA,GAAAA,YAAAA,EAAMY,MAAO,GAAG,CAAA,CAEP,EAEZkC,EAACC,EAAU,CAACC,QAAQ,QAAQC,MAAM,QAAQlB,GAAI,CAAEoB,aAAc,CAAE,EAAEjB,SAAC,kEAAA,CAEvD,EAGX7B,GACCyC,EAACC,EAAU,CACTC,QAAQ,QACRC,MACE5C,EAAQ+C,SAAS,UAAO,GAAK/C,EAAQ+C,SAAS,YAAY,EACtD,QACA,MAENrB,GAAI,CAAEoB,aAAc,CAAE,EAAEjB,SAEvB7B,CACS,CAAA,EAIb,CAACE,KACC8C,EAAM,CACLL,QAAQ,YACRC,MAAM,UACNK,KAAK,QACLvB,GAAI,CACFa,MAAO,MACPW,UAAW,SACXb,aAAc,OACdc,gBAAiB,UACjB,SAAU,CACRA,gBAAiB,SACnB,CACF,EACAC,QAAS9C,EACT+C,SAAUxD,EAASgC,SAElBhC,EAAU,cAAgB,kCAAA,CACrB,EAITK,GACCuC,EAACO,EAAM,CACLL,QAAQ,YACRC,MAAM,UACNK,KAAK,QACLvB,GAAI,CACFa,MAAO,MACPW,UAAW,SACXb,aAAc,OACdc,gBAAiB,UACjB,SAAU,CACRA,gBAAiB,SACnB,EACAG,UAAW,CACb,EACAF,QAASA,IAAMhD,EAAS,QAAQ,EAAGyB,SACpC,aAAA,CAEO,CACT,CAAA,CACI,CAAA,CACF,CAEX"}