{"version":3,"file":"Entrenador.34be7926.js","sources":["../../node_modules/@mui/icons-material/esm/Add.js","../../src/pages/Entrenador/PresentacionEntrenador.jsx","../../src/components/Select/SelelectUser.jsx","../../src/components/Select/SelectRutina.jsx","../../src/pages/Entrenador/HorarioAsignacion.jsx","../../src/pages/Entrenador/CrearRutina.jsx","../../src/sections/Entrenador.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { motion } from \"framer-motion\";\r\nimport { varBounce } from \"../../components/animate/variants/bounce\";\r\nimport { varFade } from \"../../components/animate/variants/fade\";\r\nimport Banner from \"../../assets/images/Grid10.jpg\";\r\nimport { useAuth } from \"../../context/authContext\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction WelcomePage() {\r\n  const { User } = useAuth();\r\n\r\n  return (\r\n    <Box>\r\n      {/* Hero de Presentación */}\r\n      <motion.div\r\n        initial=\"initial\"\r\n        animate=\"animate\"\r\n        exit=\"exit\"\r\n        variants={varFade().in} // Utilizando correctamente varBounce\r\n      >\r\n        <Box\r\n          minHeight={{ xs: \"calc(100vh)\", sm: \"calc(100vh)\" }}\r\n          sx={{\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            backgroundImage: `url(${Banner})`,\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            color: \"white\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n            }}\r\n          />\r\n          <motion.div\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n            exit=\"exit\"\r\n            variants={varBounce().in} // Utilizando correctamente varBounce\r\n          >\r\n            <Box sx={{ position: \"relative\", zIndex: 1 }}>\r\n              <Typography variant=\"h2\" component=\"h1\" gutterBottom>\r\n                ¡Bienvenido a UniStrong entrenador,{\" \"}\r\n                <Typography\r\n                  variant=\"h2\"\r\n                  component=\"span\"\r\n                  sx={{ color: \"redRYB.main\" }}\r\n                >\r\n                  {User.username}\r\n                </Typography>\r\n                !\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                Cambia vidas, cambia el mundo\r\n              </Typography>\r\n            </Box>\r\n          </motion.div>\r\n        </Box>\r\n      </motion.div>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default WelcomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\r\nimport { ObtenerUsuarios } from \"../../api/Ejericios\";\r\n\r\nconst SelectUser = ({ onSelectionChange }) => {\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [usuarios, setUsuarios] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchUsuarios = async () => {\r\n      try {\r\n        const response = await ObtenerUsuarios();\r\n        setUsuarios(response.data);\r\n        console.log(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error al obtener los usuarios:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUsuarios();\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    const value = event.target.value;\r\n    setSelectedOption(value);\r\n    onSelectionChange(value);\r\n  };\r\n\r\n  return (\r\n    <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\r\n      <InputLabel id=\"user-select-label\">Usuario</InputLabel>\r\n      <Select\r\n        labelId=\"user-select-label\"\r\n        id=\"user-select\"\r\n        value={selectedOption}\r\n        label=\"Usuario\"\r\n        onChange={handleChange}\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>Seleccione un usuario</em>\r\n        </MenuItem>\r\n        {usuarios.map((usuario) => (\r\n          <MenuItem key={usuario.id} value={usuario.user.email}>\r\n            {usuario.user.email}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SelectUser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\r\nimport { TraerRutinadeeEntrenador } from \"../../api/Ejericios\";\r\n\r\nconst SelectRutina = ({ onSelectionChange, personaId }) => {\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [rutinas, setRutinas] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRutinas = async () => {\r\n      try {\r\n        const response = await TraerRutinadeeEntrenador(personaId);\r\n        console.log(\"Rutinas obtenidas:\", response.data);\r\n        setRutinas(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error al obtener las rutinas:\", error);\r\n      }\r\n    };\r\n\r\n    if (personaId) {\r\n      fetchRutinas();\r\n    }\r\n  }, [personaId]);\r\n\r\n  const handleChange = (event) => {\r\n    const value = event.target.value;\r\n    setSelectedOption(value);\r\n    onSelectionChange(value);\r\n  };\r\n\r\n  return (\r\n    <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\r\n      <InputLabel id=\"rutina-select-label\">Rutina</InputLabel>\r\n      <Select\r\n        labelId=\"rutina-select-label\"\r\n        id=\"rutina-select\"\r\n        value={selectedOption}\r\n        label=\"Rutina\"\r\n        onChange={handleChange}\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>Seleccione una rutina</em>\r\n        </MenuItem>\r\n        {rutinas.map((rutina) => (\r\n          <MenuItem key={rutina.id} value={rutina.id}>\r\n            {rutina.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SelectRutina;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Calendar from \"@fullcalendar/react\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Stack,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Add, Close } from \"@mui/icons-material\";\r\nimport Logo from \"../../assets/images/Logo1.png\";\r\nimport { motion } from \"framer-motion\";\r\nimport { varRotate } from \"../../components/animate/variants/rotate\";\r\nimport SelectUser from \"../../components/Select/SelelectUser\";\r\nimport SelectRutina from \"../../components/Select/SelectRutina\";\r\nimport { AsignarRutina } from \"../../api/Ejericios\";\r\nimport { useAuth } from \"../../context/authContext\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { TraerRutinadeeEntrenador } from \"../../api/Ejericios\";\r\n\r\nconst HorarioAsignacion = () => {\r\n  const theme = useTheme();\r\n  const calendarRef = useRef(null);\r\n  const [events, setEvents] = useState([]);\r\n  const [openForm, setOpenForm] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const { additionalData } = useAuth();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [newEvent, setNewEvent] = useState({\r\n    start: \"\",\r\n    recurrenceDay: \"\",\r\n    userId: \"\",\r\n    rutinaId: \"\",\r\n  });\r\n\r\n  console.log(additionalData);\r\n\r\n  const handleDateSelect = (selectInfo) => {\r\n    setNewEvent({\r\n      start: selectInfo.startStr,\r\n      recurrenceDay: \"\",\r\n      userId: additionalData.id,\r\n      rutinaId: \"\",\r\n    });\r\n    setOpenForm(true);\r\n  };\r\n\r\n  const handleEventClick = (clickInfo) => {\r\n    setSelectedEvent(clickInfo.event);\r\n    setNewEvent({\r\n      start: clickInfo.event.startStr,\r\n      recurrenceDay: clickInfo.event.extendedProps.recurrenceDay,\r\n      userId: clickInfo.event.extendedProps.userId,\r\n      rutinaId: clickInfo.event.extendedProps.rutinaId,\r\n    });\r\n    setOpenForm(true);\r\n  };\r\n\r\n  const handleEventAdd = async () => {\r\n    // Enviar la información del evento al backend\r\n    try {\r\n      console.log(\"Evento a agregar:\", newEvent);\r\n      const dataPerson = {\r\n        scheduledDate: newEvent.start,\r\n        email: newEvent.userId,\r\n        routineId: newEvent.rutinaId,\r\n        recurrenceDay: newEvent.recurrenceDay,\r\n      };\r\n      console.log(\"Data a enviar:\", dataPerson);\r\n      const response = await AsignarRutina(dataPerson);\r\n      if (response.status !== 200) {\r\n        throw new Error(\"Error al agregar el evento\");\r\n      }\r\n      enqueueSnackbar(\"Evento agregado correctamente\", { variant: \"success\" });\r\n      console.log(\"Evento agregado:\", response.data);\r\n\r\n      // Recargar la página\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      enqueueSnackbar(\"Error al agregar el evento\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  const handleEventChange = async () => {\r\n    // Enviar la información del evento al backend\r\n    try {\r\n      const response = await AsignarRutina(newEvent);\r\n      if (response.status !== 200) {\r\n        throw new Error(\"Error al actualizar el evento\");\r\n      }\r\n      enqueueSnackbar(\"Evento actualizado correctamente\", {\r\n        variant: \"success\",\r\n      });\r\n      console.log(\"Evento actualizado:\", response.data);\r\n\r\n      // Recargar la página\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      enqueueSnackbar(\"Error al actualizar el evento\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  const handleEventRemove = () => {\r\n    selectedEvent.remove();\r\n    setEvents(events.filter((event) => event.id !== selectedEvent.id));\r\n    setOpenForm(false);\r\n  };\r\n\r\n  const handleUserChange = (value) => {\r\n    setNewEvent({ ...newEvent, userId: value });\r\n  };\r\n\r\n  const handleRutinaChange = (value) => {\r\n    setNewEvent({ ...newEvent, rutinaId: value });\r\n  };\r\n\r\n  const handleRecurrenceDayChange = (event) => {\r\n    setNewEvent({ ...newEvent, recurrenceDay: event.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchRutinas = async () => {\r\n      try {\r\n        const response = await TraerRutinadeeEntrenador(additionalData.id);\r\n        console.log(\"Response:\", response);\r\n        if (response.status !== 200) {\r\n          throw new Error(\"Error al obtener las rutinas\");\r\n        }\r\n        console.log(\"Rutinas:\", response.data);\r\n\r\n        // Mapa de colores para los clientes\r\n        const colorMap = {};\r\n        const colors = [\r\n          \"#FF5733\",\r\n          \"#33FF57\",\r\n          \"#3357FF\",\r\n          \"#FF33A1\",\r\n          \"#FF8C33\",\r\n          \"#33FFF5\",\r\n          \"#8C33FF\",\r\n        ];\r\n        let colorIndex = 0;\r\n\r\n        // Transformar los datos recibidos en eventos para el calendario\r\n        const rutinas = response.data.flatMap((rutina) =>\r\n          rutina.clients.flatMap((client) => {\r\n            if (!colorMap[client.user_id]) {\r\n              colorMap[client.user_id] = colors[colorIndex % colors.length];\r\n              colorIndex++;\r\n            }\r\n            return client.client_routines.recurrentDates.map((date) => ({\r\n              id: rutina.id,\r\n              title: rutina.name,\r\n              start: date,\r\n              userId: client.user_id,\r\n              rutinaId: rutina.id,\r\n              recurrenceDay: client.client_routines.recurrenceDay,\r\n              backgroundColor: colorMap[client.user_id],\r\n              borderColor: colorMap[client.user_id],\r\n            }));\r\n          })\r\n        );\r\n\r\n        // Actualizar el estado de los eventos\r\n        setEvents(rutinas);\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n        enqueueSnackbar(\"Error al obtener las rutinas\", { variant: \"error\" });\r\n      }\r\n    };\r\n\r\n    fetchRutinas();\r\n  }, [additionalData.id, enqueueSnackbar]);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ p: 5, backgroundColor: \"cultured.main\" }}>\r\n        <Box>\r\n          <motion.div\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n            exit=\"exit\"\r\n            variants={varRotate().in}\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                mb: 3,\r\n              }}\r\n            >\r\n              <img\r\n                src={Logo}\r\n                alt=\"Logo\"\r\n                style={{\r\n                  padding: \"10px\",\r\n                  border: \"5px solid #ff0000\",\r\n                  borderRadius: \"50%\",\r\n                  width: \"120px\",\r\n                  height: \"120px\",\r\n                  boxShadow: \"0 10px 20px rgba(0,0,0,0.2)\",\r\n                  transition: \"transform 0.3s\",\r\n                }}\r\n                onMouseOver={(e) =>\r\n                  (e.currentTarget.style.transform = \"scale(1.1)\")\r\n                }\r\n                onMouseOut={(e) =>\r\n                  (e.currentTarget.style.transform = \"scale(1)\")\r\n                }\r\n              />\r\n            </Box>\r\n          </motion.div>\r\n          <Typography\r\n            variant=\"h4\"\r\n            align=\"center\"\r\n            gutterBottom\r\n            sx={{ fontWeight: \"bold\", color: \"redRYB.main\" }}\r\n          >\r\n            Tus Horarios de Entrenamientos\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" align=\"center\" gutterBottom>\r\n            Organiza tu entrenamiento con nuestras clases programadas\r\n          </Typography>\r\n        </Box>\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          sx={{ mb: 3 }}\r\n        >\r\n          <Typography\r\n            sx={{ fontWeight: \"bold\", color: \"richBlack.main\" }}\r\n            variant=\"h6\"\r\n          >\r\n            Calendario de Eventos\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<Add />}\r\n            onClick={() => setOpenForm(true)}\r\n            sx={{\r\n              backgroundColor: \"redRYB.main\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"#b71c1c\",\r\n                transform: \"scale(1.05)\",\r\n              },\r\n              transition: \"transform 0.3s\",\r\n            }}\r\n          >\r\n            Asignar Rutina\r\n          </Button>\r\n        </Stack>\r\n        <Card\r\n          sx={{\r\n            p: 2,\r\n            boxShadow: \"0 8px 16px rgba(0,0,0,0.1)\",\r\n            borderRadius: \"16px\",\r\n          }}\r\n        >\r\n          <Calendar\r\n            ref={calendarRef}\r\n            plugins={[\r\n              dayGridPlugin,\r\n              timeGridPlugin,\r\n              interactionPlugin,\r\n              listPlugin,\r\n            ]}\r\n            initialView=\"dayGridMonth\"\r\n            selectable\r\n            editable\r\n            events={events}\r\n            select={handleDateSelect}\r\n            eventClick={handleEventClick}\r\n            headerToolbar={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\r\n            }}\r\n            buttonText={{\r\n              today: \"Hoy\",\r\n              month: \"Mes\",\r\n              week: \"Semana\",\r\n              day: \"Día\",\r\n              list: \"Lista\",\r\n            }}\r\n            height=\"auto\"\r\n            eventTextColor=\"#fff\"\r\n          />\r\n        </Card>\r\n      </Box>\r\n\r\n      <Dialog\r\n        open={openForm}\r\n        onClose={() => setOpenForm(false)}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        PaperProps={{\r\n          sx: {\r\n            p: 2,\r\n            borderRadius: \"16px\",\r\n            boxShadow: \"0 8px 16px rgba(0,0,0,0.1)\",\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle>\r\n          {selectedEvent ? \"Editar Evento\" : \"Nuevo Evento\"}\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={() => setOpenForm(false)}\r\n            sx={{\r\n              position: \"absolute\",\r\n              right: 8,\r\n              top: 8,\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Fecha de Inicio\"\r\n            type=\"datetime-local\"\r\n            fullWidth\r\n            value={newEvent.start}\r\n            onChange={(e) =>\r\n              setNewEvent({ ...newEvent, start: e.target.value })\r\n            }\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            variant=\"outlined\"\r\n          />\r\n          <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\r\n            <InputLabel id=\"recurrence-day-label\">\r\n              Día de Recurrencia\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"recurrence-day-label\"\r\n              id=\"recurrence-day\"\r\n              value={newEvent.recurrenceDay}\r\n              onChange={handleRecurrenceDayChange}\r\n              label=\"Día de Recurrencia\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>Seleccione un día</em>\r\n              </MenuItem>\r\n              <MenuItem value={0}>Domingo</MenuItem>\r\n              <MenuItem value={1}>Lunes</MenuItem>\r\n              <MenuItem value={2}>Martes</MenuItem>\r\n              <MenuItem value={3}>Miércoles</MenuItem>\r\n              <MenuItem value={4}>Jueves</MenuItem>\r\n              <MenuItem value={5}>Viernes</MenuItem>\r\n              <MenuItem value={6}>Sábado</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <SelectUser onSelectionChange={handleUserChange} />\r\n          <SelectRutina\r\n            onSelectionChange={handleRutinaChange}\r\n            personaId={additionalData.id}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {selectedEvent && (\r\n            <Button\r\n              onClick={handleEventRemove}\r\n              color=\"error\"\r\n              variant=\"contained\"\r\n            >\r\n              Eliminar\r\n            </Button>\r\n          )}\r\n          <Button onClick={() => setOpenForm(false)} variant=\"outlined\">\r\n            Cancelar\r\n          </Button>\r\n          <Button\r\n            onClick={selectedEvent ? handleEventChange : handleEventAdd}\r\n            variant=\"contained\"\r\n            sx={{\r\n              backgroundColor: \"redRYB.main\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"#b71c1c\",\r\n              },\r\n            }}\r\n          >\r\n            {selectedEvent ? \"Guardar Cambios\" : \"Agregar Evento\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorarioAsignacion;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  CircularProgress,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Logo from \"../../assets/images/Logo1.png\";\r\nimport Banner from \"../../assets/images/Grid8.jpg\";\r\nimport { RutinasCreate } from \"../../api/Ejericios\";\r\nimport { z } from \"zod\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useAuth } from \"../../context/authContext\"; // Importar el contexto de autenticación\r\n\r\nconst schema = z.object({\r\n  name: z.string().nonempty(\"El nombre es requerido\"),\r\n  description: z.string().nonempty(\"La descripción es requerida\"),\r\n  category: z.string().nonempty(\"La categoría es requerida\"),\r\n  musclesWorked: z\r\n    .array(z.string())\r\n    .nonempty(\"El músculo trabajado es requerido\"),\r\n});\r\n\r\nconst defaultValues = {\r\n  name: \"\",\r\n  description: \"\",\r\n  category: \"\",\r\n  musclesWorked: [],\r\n};\r\n\r\nconst CrearRutina = () => {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n    reset,\r\n  } = useForm({\r\n    resolver: zodResolver(schema),\r\n    defaultValues,\r\n  });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { additionalData } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      if (data.musclesWorked.length === 0) {\r\n        throw new Error(\"Debes seleccionar al menos un músculo trabajado\");\r\n      }\r\n      const routineData = { ...data, coachId: additionalData.id };\r\n      const response = await RutinasCreate(routineData);\r\n\r\n      if (response.status === 201) {\r\n        enqueueSnackbar(\"Rutina creada exitosamente\", {\r\n          variant: \"success\",\r\n        });\r\n        reset();\r\n      }\r\n    } catch (error) {\r\n      const errorMessage =\r\n        error.response?.data?.message || // Mensaje personalizado del servidor\r\n        (typeof error === \"string\" ? error : error.message);\r\n      setError(errorMessage);\r\n      console.error(\"Error al crear la rutina\", errorMessage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        minHeight: \"100vh\",\r\n        backgroundColor: \"white\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: 5,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"lightgray\",\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <motion.img\r\n          src={Banner}\r\n          alt=\"Banner\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ duration: 1 }}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            objectFit: \"cover\",\r\n            borderRadius: \"16px\",\r\n            boxShadow: \"0 10px 20px rgba(0,0,0,0.2)\",\r\n          }}\r\n        />\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          p: 5,\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <Card\r\n          sx={{\r\n            width: \"100%\",\r\n            maxWidth: \"600px\",\r\n            p: 4,\r\n            boxShadow: \"0 8px 16px rgba(0,0,0,0.5)\",\r\n            borderRadius: \"16px\",\r\n            backgroundColor: \"white\",\r\n            overflow: \"auto\",\r\n            maxHeight: \"100%\",\r\n          }}\r\n        >\r\n          <Box sx={{ textAlign: \"center\", mb: 3 }}>\r\n            <motion.div\r\n              initial=\"initial\"\r\n              animate=\"animate\"\r\n              exit=\"exit\"\r\n              variants={{\r\n                initial: { opacity: 0, rotate: -10 },\r\n                animate: { opacity: 1, rotate: 0 },\r\n                exit: { opacity: 0, rotate: 10 },\r\n              }}\r\n            >\r\n              <img\r\n                src={Logo}\r\n                alt=\"Logo\"\r\n                style={{\r\n                  padding: \"10px\",\r\n                  border: \"5px solid #ff0000\",\r\n                  borderRadius: \"50%\",\r\n                  width: \"120px\",\r\n                  height: \"120px\",\r\n                  boxShadow: \"0 10px 20px rgba(0,0,0,0.2)\",\r\n                  transition: \"transform 0.3s\",\r\n                }}\r\n                onMouseOver={(e) =>\r\n                  (e.currentTarget.style.transform = \"scale(1.1)\")\r\n                }\r\n                onMouseOut={(e) =>\r\n                  (e.currentTarget.style.transform = \"scale(1)\")\r\n                }\r\n              />\r\n            </motion.div>\r\n            <Typography\r\n              variant=\"h4\"\r\n              sx={{ fontWeight: \"bold\", color: \"redRYB.main\" }}\r\n            >\r\n              Crear Nueva Rutina\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Asigna una nueva rutina de ejercicios a un usuario específico\r\n            </Typography>\r\n          </Box>\r\n          {!!error && (\r\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      margin=\"dense\"\r\n                      label=\"Nombre\"\r\n                      type=\"text\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      error={!!errors.name}\r\n                      helperText={errors.name?.message}\r\n                      sx={{\r\n                        backgroundColor: \"#f4f4f9\",\r\n                        borderRadius: 2,\r\n                        \"& .MuiOutlinedInput-root\": {\r\n                          \"& fieldset\": {\r\n                            borderColor: \"gray\",\r\n                          },\r\n                          \"&:hover fieldset\": {\r\n                            borderColor: \"blue\",\r\n                          },\r\n                          \"&.Mui-focused fieldset\": {\r\n                            borderColor: \"redRYB.main\",\r\n                          },\r\n                          \"&.Mui-error fieldset\": {\r\n                            borderColor: \"red\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  name=\"description\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      margin=\"dense\"\r\n                      label=\"Descripción\"\r\n                      type=\"text\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      multiline\r\n                      rows={4}\r\n                      maxRows={4}\r\n                      error={!!errors.description}\r\n                      helperText={errors.description?.message}\r\n                      sx={{\r\n                        backgroundColor: \"#f4f4f9\",\r\n                        borderRadius: 2,\r\n                        \"& .MuiOutlinedInput-root\": {\r\n                          \"& fieldset\": {\r\n                            borderColor: \"gray\",\r\n                          },\r\n                          \"&:hover fieldset\": {\r\n                            borderColor: \"blue\",\r\n                          },\r\n                          \"&.Mui-focused fieldset\": {\r\n                            borderColor: \"redRYB.main\",\r\n                          },\r\n                          \"&.Mui-error fieldset\": {\r\n                            borderColor: \"red\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  error={!!errors.category}\r\n                >\r\n                  <InputLabel id=\"category-select-label\">Categoría</InputLabel>\r\n                  <Controller\r\n                    name=\"category\"\r\n                    control={control}\r\n                    render={({ field }) => (\r\n                      <Select\r\n                        {...field}\r\n                        labelId=\"category-select-label\"\r\n                        label=\"Categoría\"\r\n                        sx={{\r\n                          backgroundColor: \"#f4f4f9\",\r\n                          borderRadius: 2,\r\n                          \"& .MuiOutlinedInput-root\": {\r\n                            \"& fieldset\": {\r\n                              borderColor: \"gray\",\r\n                            },\r\n                            \"&:hover fieldset\": {\r\n                              borderColor: \"blue\",\r\n                            },\r\n                            \"&.Mui-focused fieldset\": {\r\n                              borderColor: \"redRYB.main\",\r\n                            },\r\n                            \"&.Mui-error fieldset\": {\r\n                              borderColor: \"red\",\r\n                            },\r\n                          },\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"Facil\">Facil</MenuItem>\r\n                        <MenuItem value=\"Medio\">Medio</MenuItem>\r\n                        <MenuItem value=\"Avanzado\">Avanzado</MenuItem>\r\n                      </Select>\r\n                    )}\r\n                  />\r\n                  {errors.category && (\r\n                    <Typography color=\"error\">\r\n                      {errors.category.message}\r\n                    </Typography>\r\n                  )}\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  error={!!errors.musclesWorked}\r\n                >\r\n                  <InputLabel id=\"musclesWorked-select-label\">\r\n                    Músculos Trabajados\r\n                  </InputLabel>\r\n                  <Controller\r\n                    name=\"musclesWorked\"\r\n                    control={control}\r\n                    render={({ field }) => (\r\n                      <Select\r\n                        {...field}\r\n                        labelId=\"musclesWorked-select-label\"\r\n                        label=\"Músculos Trabajados\"\r\n                        multiple\r\n                        sx={{\r\n                          backgroundColor: \"#f4f4f9\",\r\n                          borderRadius: 2,\r\n                          \"& .MuiOutlinedInput-root\": {\r\n                            \"& fieldset\": {\r\n                              borderColor: \"gray\",\r\n                            },\r\n                            \"&:hover fieldset\": {\r\n                              borderColor: \"blue\",\r\n                            },\r\n                            \"&.Mui-focused fieldset\": {\r\n                              borderColor: \"redRYB.main\",\r\n                            },\r\n                            \"&.Mui-error fieldset\": {\r\n                              borderColor: \"red\",\r\n                            },\r\n                          },\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"Pecho\">Pecho</MenuItem>\r\n                        <MenuItem value=\"Espalda\">Espalda</MenuItem>\r\n                        <MenuItem value=\"Piernas\">Piernas</MenuItem>\r\n                        <MenuItem value=\"Brazos\">Brazos</MenuItem>\r\n                        <MenuItem value=\"Hombros\">Hombros</MenuItem>\r\n                      </Select>\r\n                    )}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  disabled={isSubmitting}\r\n                  sx={{\r\n                    backgroundColor: \"redRYB.main\",\r\n                    \"&:hover\": {\r\n                      backgroundColor: \"#b71c1c\",\r\n                    },\r\n                  }}\r\n                >\r\n                  {isSubmitting ? \"Creando...\" : \"Crear Rutina\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CrearRutina;\r\n","import React from \"react\";\r\n\r\nimport WelcomePage from \"../pages/Entrenador/PresentacionEntrenador\";\r\nimport Horario from \"../pages/Entrenador/HorarioAsignacion\";\r\nimport CrearRutina from \"../pages/Entrenador/CrearRutina\";\r\n\r\nimport { CONFIG } from \"../config-global\";\r\n\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst metadata = { title: `Bienvenido entrenador |  ${CONFIG.appName}` };\r\n\r\nfunction Entrenador() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> {metadata.title}</title>\r\n      </Helmet>\r\n\r\n      <WelcomePage />\r\n      <Horario />\r\n      <CrearRutina />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Entrenador;\r\n"],"names":["Add","createSvgIcon","_jsx","WelcomePage","User","useAuth","Box","children","motion","div","initial","animate","exit","variants","varFade","in","minHeight","xs","sm","sx","position","width","backgroundImage","Banner","backgroundSize","backgroundPosition","display","alignItems","justifyContent","color","textAlign","top","left","height","backgroundColor","varBounce","zIndex","_jsxs","Typography","variant","component","gutterBottom","username","SelectUser","onSelectionChange","selectedOption","setSelectedOption","useState","usuarios","setUsuarios","useEffect","response","ObtenerUsuarios","data","log","error","FormControl","fullWidth","margin","InputLabel","id","Select","labelId","value","label","onChange","event","target","MenuItem","map","usuario","user","email","SelectRutina","personaId","rutinas","setRutinas","TraerRutinadeeEntrenador","rutina","name","HorarioAsignacion","useTheme","calendarRef","useRef","events","setEvents","openForm","setOpenForm","selectedEvent","setSelectedEvent","additionalData","enqueueSnackbar","useSnackbar","newEvent","setNewEvent","start","recurrenceDay","userId","rutinaId","console","handleDateSelect","selectInfo","startStr","handleEventClick","clickInfo","extendedProps","handleEventAdd","dataPerson","scheduledDate","routineId","AsignarRutina","status","Error","window","location","reload","handleEventChange","handleEventRemove","remove","filter","handleUserChange","handleRutinaChange","handleRecurrenceDayChange","colorMap","colors","colorIndex","flatMap","clients","client","user_id","length","client_routines","recurrentDates","date","title","borderColor","_Fragment","p","varRotate","mb","src","Logo","alt","style","padding","border","borderRadius","boxShadow","transition","onMouseOver","e","currentTarget","transform","onMouseOut","align","fontWeight","Stack","direction","Button","startIcon","onClick","Card","Calendar","ref","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","initialView","selectable","editable","select","eventClick","headerToolbar","center","right","buttonText","today","month","week","day","list","eventTextColor","Dialog","open","onClose","maxWidth","PaperProps","DialogTitle","IconButton","theme","palette","grey","Close","DialogContent","dividers","TextField","type","InputLabelProps","shrink","DialogActions","schema","z","object","string","nonempty","description","category","musclesWorked","array","defaultValues","CrearRutina","control","handleSubmit","formState","errors","isSubmitting","reset","useForm","resolver","zodResolver","setError","onSubmit","routineData","coachId","RutinasCreate","errorMessage","message","flex","img","opacity","duration","objectFit","flexDirection","overflow","maxHeight","rotate","Alert","severity","noValidate","Grid","container","spacing","item","Controller","render","field","helperText","multiline","rows","maxRows","multiple","disabled","metadata","CONFIG","appName","Entrenador","Helmet","Horario"],"mappings":"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"}