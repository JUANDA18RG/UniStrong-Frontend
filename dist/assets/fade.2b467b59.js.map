{"version":3,"file":"fade.2b467b59.js","sources":["../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../../node_modules/framer-motion/dist/es/utils/memo.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../src/components/animate/variants/fade.js"],"sourcesContent":["function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","import { progress } from '../../../../utils/progress.mjs';\n\n// Create a linear easing point for every 10 ms\nconst resolution = 10;\nconst generateLinearEasing = (easing, duration // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.11.9\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    if (!visualElement.applyWillChange)\n        return;\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.11.9\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.11.9 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { varTranExit, varTranEnter } from './transition';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const varFade = () => {\r\n  const distance =  120;\r\n  const durationIn = 0.6;\r\n  const durationOut = 0.4;\r\n  const easeIn = [0.43, 0.13, 0.23, 0.96];\r\n  const easeOut = [0.43, 0.13, 0.23, 0.96];\r\n\r\n  return {\r\n    // IN\r\n    in: {\r\n      initial: { opacity: 0 },\r\n      animate: { opacity: 1, transition: varTranEnter },\r\n      exit: { opacity: 0, transition: varTranExit },\r\n    },\r\n    inUp: {\r\n      initial: { y: distance, opacity: 0 },\r\n      animate: { y: 0, opacity: 1, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { y: distance, opacity: 0, transition: varTranExit({ durationOut, easeOut }) },\r\n    },\r\n    inDown: {\r\n      initial: { y: -distance, opacity: 0 },\r\n      animate: { y: 0, opacity: 1, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { y: -distance, opacity: 0, transition: varTranExit({ durationOut, easeOut }) },\r\n    },\r\n    inLeft: {\r\n      initial: { x: -distance, opacity: 0 },\r\n      animate: { x: 0, opacity: 1, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { x: -distance, opacity: 0, transition: varTranExit({ durationOut, easeOut }) },\r\n    },\r\n    inRight: {\r\n      initial: { x: distance, opacity: 0 },\r\n      animate: { x: 0, opacity: 1, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { x: distance, opacity: 0, transition: varTranExit({ durationOut, easeOut }) },\r\n    },\r\n\r\n    // OUT\r\n    out: {\r\n      initial: { opacity: 1 },\r\n      animate: { opacity: 0, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { opacity: 1, transition: varTranExit({ durationOut, easeOut }) },\r\n    },\r\n    outUp: {\r\n      initial: { y: 0, opacity: 1 },\r\n      animate: { y: -distance, opacity: 0, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { y: 0, opacity: 1, transition: varTranExit({ durationOut, easeOut }) },\r\n    },\r\n    outDown: {\r\n      initial: { y: 0, opacity: 1 },\r\n      animate: { y: distance, opacity: 0, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { y: 0, opacity: 1, transition: varTranExit({ durationOut, easeOut }) },\r\n    },\r\n    outLeft: {\r\n      initial: { x: 0, opacity: 1 },\r\n      animate: { x: -distance, opacity: 0, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { x: 0, opacity: 1, transition: varTranExit({ durationOut, easeOut }) },\r\n    },\r\n    outRight: {\r\n      initial: { x: 0, opacity: 1 },\r\n      animate: { x: distance, opacity: 0, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { x: 0, opacity: 1, transition: varTranExit({ durationOut, easeOut }) },\r\n    },\r\n  };\r\n};\r\n"],"names":["shallowCompare","next","prev","prevLength","resolveVariant","visualElement","definition","custom","props","resolveVariantFromProps","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","criticallyDampedSpring","target","keyframesTransition","ease","getDefaultTransition","valueKey","keyframes","transformProps","getValueTransition","transition","key","MotionGlobalConfig","instantAnimationState","isNotNull","value","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","index","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","x","lowerBound","upperBound","mX1","mX2","currentX","currentT","i","cubicBezier","mY1","mY2","noop","getTForX","aX","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","circOut","circInOut","isZeroValueString","v","isNone","warning","invariant","isNumericalString","splitCSSVariableRegex","parseCSSVariable","current","match","token1","token2","fallback","getVariableValue","element","depth","token","resolved","trimmed","isCSSVariableToken","positionalKeys","isNumOrPxType","number","px","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","transform","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","y","paddingTop","paddingBottom","top","left","testValueType","type","auto","dimensionValueTypes","percent","degrees","vw","vh","findDimensionValueType","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","elementsToMeasure","transformsToRestore","restore","_a","readAllKeyframes","flushKeyframeResolvers","KeyframeResolver","unresolvedKeyframes","onComplete","name","motionValue","isAsync","frame","currentValue","valueAsRead","sanitize","floatRegex","isNullish","singleColorRegex","isColorString","testProp","splitColor","aName","bName","cName","a","b","c","alpha","clampRgbUnit","clamp","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","r","g","hex","hsla","hue","saturation","lightness","color","colorRegex","test","_b","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","values","indexes","types","split","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","getAnimatableNone","parsed","complex","maxDefaults","applyDefaultFilter","unit","defaultValue","functionRegex","filter","functions","defaultValueTypes","numberValueTypes","getDefaultValueType","defaultValueType","invalidTemplates","makeNoneKeyframesAnimatable","noneKeyframeIndexes","animatableTemplate","keyframe","noneIndex","DOMKeyframesResolver","origin","originType","targetType","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","now","clearTime","time","frameData","newTime","isAnimatable","hasKeyframesChanged","canAnimate","velocity","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","MAX_RESOLVE_DELAY","BaseAnimation","autoplay","delay","repeatDelay","options","onUpdate","resolvedAnimation","resolve","reject","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","duration","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","e","f","initialGuess","approximateRoot","stiffness","rootIterations","result","durationKeys","physicsKeys","isSpringType","keys","getSpringOptions","springOptions","derived","spring","restDelta","restSpeed","state","damping","isResolvedFromDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","dampedAngularFreq","freqForT","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","min","max","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isEasingArray","isBezierDefinition","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","transformers","progress","from","to","toFromDifference","mixNumber","hueToRgb","q","hslaToRgba","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixVisibility","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","matchOrder","orderedOrigin","pointers","originIndex","originValue","template","originStats","targetStats","mix","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","interpolator","progressInRange","fillOffset","offset","remaining","offsetProgress","defaultOffset","arr","convertOffsetToTimes","o","defaultEasing","keyframeValues","times","easingFunctions","absoluteTimes","mapTimeToKeyframe","maxGeneratorDuration","calcGeneratorDuration","generator","timeStep","frameloopDriver","update","passTimestamp","timestamp","cancelFrame","generators","percentToProgress","MainThreadAnimation","onStop","KeyframeResolver$1","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","calculatedDuration","resolvedDuration","totalDuration","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","iterationProgress","done","isAnimationFinished","newSpeed","hasChanged","driver","onPlay","startTime","resolution","generateLinearEasing","points","numPoints","memo","callback","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","d","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","attachTimeline","animation","timeline","supportsWaapi","sampleDelta","requiresPregeneratedKeyframes","pregenerateKeyframes","sampleAnimation","pregeneratedKeyframes","unsupportedEasingFunctions","isUnsupportedEase","AcceleratedAnimation","pregeneratedAnimation","sampleTime","acceleratedValues","supportsScrollTimeline","GroupPlaybackControls","animations","onResolve","onReject","propName","newValue","subscriptions","cancel","speed","methodName","controls","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","animateMotionValue","isHandoff","valueTransition","shouldSkip","addUniqueItem","item","removeItem","SubscriptionManager","handler","numSubscriptions","MAX_VELOCITY_DELTA","isFloat","MotionValue","init","render","currentTime","prevFrameValue","subscription","eventName","unsubscribe","eventManagers","passiveEffect","stopPassiveEffect","endAnimation","startAnimation","setMotionValue","setTarget","transitionEnd","resolveFinalValueInKeyframes","getOptimisedAppearId","optimizedAppearDataAttribute","isWillChangeMotionValue","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","valueTarget","appearId","animateVariant","variant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","child","animateVisualElement","resolvedDefinition","numVariantProps","variantProps","getVariantContext","context","prop","isVariantLabel","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","createAnimationState","animate","createState","isInitialRender","buildResolvedTypeValues","acc","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","isKeyframesTarget","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","isActive","createTypeState","Feature","node","AnimationFeature","prevAnimate","id","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","isPrimaryPointer","event","extractEventInfo","pointType","addPointerInfo","addDomEvent","addPointerEvent","distance","distance2D","xDelta","yDelta","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","info","getPanInfo","isPanStarted","isDistancePastThreshold","point","onStart","onMove","transformPoint","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","getVelocity","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","SCALE_PRECISION","SCALE_MIN","SCALE_MAX","TRANSLATE_PRECISION","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","parent","calcRelativeBox","calcRelativeAxisPosition","layout","calcRelativePosition","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","bottom","right","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","calcOrigin","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","convertBoxToBoundingBox","transformBoxPoints","topLeft","bottomRight","isIdentityScale","scale","hasScale","scaleX","scaleY","hasTransform","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","transformBox","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","measureViewportBox","instance","measurePageBox","rootProjectionNode","viewportBox","scroll","getContextWindow","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","presenceContext","dragPropagation","onDragStart","projection","measuredAxis","animationState","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","isDragging","onDragEnd","_point","shouldDrag","axisValue","dragConstraints","prevConstraints","isRefObject","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","transformTemplate","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","DragGesture","dragControls","asyncHandler","PanGesture","pointerDownEvent","onPanSessionStart","onPanStart","onPan","onPanEnd","usePresence","useContext","PresenceContext","useId","useEffect","safeToRemove","useCallback","globalProjectionState","pixelsToPercent","pixels","correctBorderRadius","correctBoxShadow","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","Component","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","prevProps","layoutDependency","stack","microtask","promoteContext","MeasureLayout","LayoutGroupContext","jsx","SwitchLayoutGroupContext","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","transforms","scaleKey","originKey","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","boxEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","rotate","rotateX","rotateY","skewX","skewY","elementScaleX","elementScaleY","compareByDepth","FlatTree","timeout","start","checkElapsed","isSVGElement","animateSingleValue","motionValue$1","metrics","isDebug","transformAxes","hiddenVisibility","animationTarget","resetDistortingTransform","sharedAnimationValues","latestValues","cancelTreeOptimisedTransformAnimations","projectionNode","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","args","subscriptionManager","isLayoutDirty","cancelDelay","resizeUnblockUpdate","finishAnimation","hasRelativeTargetChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetSkewAndRotation","shouldNotifyListeners","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","updateLayout","notifyLayoutUpdate","frameSteps","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","checkNodeWasScrollRoot","boxWithoutScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","forceRecalculation","isShared","relativeParent","canSkip","prevTreeScaleX","prevTreeScaleY","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","config","needsReset","hasDistortingTransform","resetValues","styleProp","styles","resolveMotionValue","emptyStyles","valuesToRender","scaleCorrectors","correct","applyTo","corrected","num","measuredLayout","animationType","axisSnapshot","length","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","userAgentContains","string","roundPoint","roundAxis","DocumentProjectionNode","ref","notify","HTMLProjectionNode","documentNode","addHoverEvent","callbackName","handleEvent","HoverGesture","FocusGesture","isFocusVisible","isNodeOrChild","fireSyntheticPointerEvent","syntheticPointerEvent","PressGesture","startEvent","startInfo","removePointerUpListener","endEvent","endInfo","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","handleKeydown","keydownEvent","handleKeyup","keyupEvent","removeKeydownListener","handleBlur","removeBlurListener","onTapStart","whileTap","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","root","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","isBrowser","motionMediaQuery","setReducedMotionPreferences","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","visualElementStore","valueTypes","findValueType","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","reducedMotionConfig","blockInitialAnimation","visualState","renderState","isControllingVariants","isVariantNode","initialMotionValues","remove","feature","valueIsTransform","removeOnChange","removeOnRenderRequest","removeSyncCheck","other","featureDefinitions","featureDefinition","isEnabled","FeatureConstructor","listenerName","listener","closestVariantNode","initial","valueFromInitial","DOMVisualElement","vars","style","getComputedStyle","HTMLVisualElement","renderHTML","defaultType","computedStyle","isCSSVariableName","buildHTMLStyles","scrapeMotionValuesFromProps","children","SVGVisualElement","camelCaseAttributes","camelToDash","buildSVGAttrs","renderSVG","isSVGTag","createDomVisualElement","isSVGComponent","Fragment","createMotionComponent","createMotionComponentFactory","motion","createDOMMotionComponentProxy","varFade","varTranEnter","varTranExit"],"mappings":"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"}