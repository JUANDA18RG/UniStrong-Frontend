{"version":3,"file":"ForgotPassword.0eea9593.js","sources":["../../src/components/ForgotPassword.jsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { FormDivider } from \"./LoginComponents/form-divider\";\r\nimport {Button, TextField, Grid, Typography } from \"@mui/material\";\r\nimport Logo from \"../assets/images/Logo1.png\";\r\nimport BackgroundImage from \"../assets/images/BannerLogin.jpg\";\r\nimport { motion } from \"framer-motion\"; \r\nimport { varBounce } from \"./animate/variants/bounce\"; \r\nimport { varFade } from \"./animate/variants/fade\";\r\nimport { varRotate } from \"./animate/variants/rotate\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { CONFIG } from \"../config-global\";\r\nimport { useVerification } from \"../context/verificationContext\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\n\r\nconst metadata = { title: `ForgotPasword |  ${CONFIG.appName}` };\r\n\r\nfunction ForgotPassword() {\r\n  const { requestPasswordCode, verifyCode, changePassword } = useVerification();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const steps = ['Ingresa tu email', 'Verifica tu email', 'Cambia tu contraseña'];\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n  const [passwordVisible1, setPasswordVisible1] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [email, setEmail] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [password, setpassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  \r\n  const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n  const passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&*(),.?\":{}|<>]).{8,}$/;\r\n\r\n\r\n  const handleNext = () => {\r\n    setErrorMsg(''); \r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n   };\r\n    \r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n   };\r\n\r\n\r\n  const validateEmail = (email) => {\r\n    return !email || !emailRegex.test(email);\r\n  };\r\n\r\n  const validateCode = (code) => {\r\n    if (!code || code.trim() === \"\") {\r\n      return \"El código no puede estar vacío\";\r\n    }\r\n    if (code.length !== 6) {\r\n      return \"El código debe tener exactamente 6 caracteres\";\r\n    }\r\n    return null;\r\n  };\r\n  \r\n  \r\n  const validatePassword = (password, confirmPassword) => {\r\n    if (!password || !passwordRegex.test(password)) {\r\n      return \"La contraseña debe tener al menos 8 caracteres, una mayúscula, un número y un carácter especial\";\r\n    }\r\n    if (password !== confirmPassword) {\r\n      return \"Las contraseñas no coinciden\";\r\n    }\r\n    return null;\r\n  };\r\n\r\n  \r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Email enviado:', email);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n        \r\n        if (validateEmail(email)) {\r\n            setErrorMsg('Por favor ingresa un correo electrónico válido');\r\n            return;\r\n        }\r\n        if (activeStep === 0) {\r\n            const response = await requestPasswordCode(email);\r\n            enqueueSnackbar(response.data.message, { variant: 'success' });\r\n            handleNext();\r\n        } else if (activeStep === 1) {\r\n          const codeError = validateCode(code);\r\n          if (codeError) {\r\n            setErrorMsg(codeError);\r\n            return;\r\n          }\r\n            const response = await verifyCode(email, code);\r\n            enqueueSnackbar(response.data.message, { variant: 'success' });\r\n            handleNext();\r\n        } else if (activeStep === 2) {\r\n            const passwordError = validatePassword(password, confirmPassword);\r\n            if (passwordError) {\r\n                setErrorMsg(passwordError);\r\n                return;\r\n            }\r\n            const response = await changePassword(email, password);\r\n            enqueueSnackbar(response.data.message, { variant: 'success' });\r\n            console.log('Nuevo password:', password);\r\n            navigate('/login');\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        const errorMessage =\r\n            error.response?.data?.message || (typeof error === 'string' ? error : error.message);\r\n        setErrorMsg(errorMessage);\r\n        enqueueSnackbar(`Error: ${errorMessage}`, { variant: 'error' });\r\n        console.log('Error:', errorMessage);\r\n    } finally {\r\n        setIsLoading(false);\r\n    }\r\n};\r\n\r\n  \r\n    return (\r\n     <>\r\n      <Helmet>\r\n      <title>{metadata.title}</title>\r\n      </Helmet>\r\n        <Grid\r\n          container\r\n          sx={{ overflow: \"hidden\"}}\r\n          maxHeight={{ xs: \"calc(100vh)\", sm: \"calc(100vh)\" }}\r\n          \r\n        >\r\n          {/* Left side: Background image with optional overlay */}\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              padding: {\r\n                xs: 2,\r\n                sm: 4,\r\n              },\r\n              backgroundColor: \"cultured.main\",\r\n            }}\r\n          >\r\n            <motion.div\r\n              initial=\"initial\"\r\n              animate=\"animate\"\r\n              exit=\"exit\"\r\n              variants={varBounce().in}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  maxWidth: 500,\r\n                  width: \"100%\",\r\n                  padding: {\r\n                    xs: 2,\r\n                    sm: 4,\r\n                  },\r\n                  borderRadius: 3,\r\n                  boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.1)\",\r\n                  backgroundColor: \"#ffffff\",\r\n                }}\r\n              >\r\n                {/* Logo */}\r\n                <motion.div\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                  variants={varRotate().in}\r\n                >\r\n                  <img\r\n                    src={Logo}\r\n                    alt=\"Logo\"\r\n                    style={{\r\n                      margin: \"0 auto 10px auto\",\r\n                      padding: \"5px\",\r\n                      border: \"3px solid #ff0000\",\r\n                      borderRadius: \"50%\",\r\n                      width: \"100px\",\r\n                      height: \"100px\",\r\n                      display: \"block\",\r\n                      boxShadow: \"0 10px 0 10px #ffffff\",\r\n                    }}\r\n                  />\r\n                </motion.div>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  component=\"h1\"\r\n                  color=\"redRYB.main\"\r\n                  sx={{\r\n                    fontSize: {\r\n                      xs: \"1.5rem\", // Tamaño de fuente más pequeño en pantallas pequeñas\r\n                      sm: \"2rem\", // Tamaño de fuente más grande en pantallas medianas\r\n                      md: \"2.5rem\", // Tamaño de fuente más grande en pantallas grandes\r\n                    },\r\n                    textAlign: \"center\",\r\n                    justifyContent: \"center\",\r\n                    fontWeight: 700,\r\n                    textTransform: \"uppercase\",\r\n                    marginY: 3, // Agrega margen arriba y abajo\r\n                  }}\r\n                >\r\n                  UniStrong  <span style={{ color: \"Black\" }}> Recover password</span>\r\n                </Typography>\r\n                \r\n    \r\n                {/* Form */}\r\n                <form onSubmit={handleSubmit}>\r\n                <Box display=\"flex\" flexDirection=\"column\" gap={3}         \r\n              >\r\n                {activeStep === 0 && (\r\n                <TextField\r\n                  name=\"email\"\r\n                  label=\"Email Address\"\r\n                  placeholder=\"Enter your email address\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  error={!!errorMsg}  // Indica si hay un error\r\n                  helperText={errorMsg}\r\n                  sx={{\r\n                    backgroundColor: \"#f4f4f9\",\r\n                    borderRadius: 2,\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": { borderColor: \"gray\" },\r\n                      \"&:hover fieldset\": { borderColor: \"blue\" },\r\n                      \"&.Mui-focused fieldset\": { borderColor: \"redRYB.main\" },\r\n                      \"&.Mui-error fieldset\": { borderColor: \"red\" },\r\n                    },\r\n                  }}\r\n                />\r\n             )}\r\n              {activeStep === 1 && (\r\n              <Box display=\"flex\" flexDirection=\"column\" gap={2}>\r\n                <Typography variant=\"h1\" sx={{ fontSize: { xs: '0.875rem', sm: '1rem', md: '1.125rem', lg: '1.25rem' } }}>\r\n                  Please enter the code sent to your email address\r\n                </Typography>\r\n                <Box display=\"flex\" gap={2}>\r\n                  {['code1', 'code2', 'code3', 'code4', 'code5', 'code6'].map((name, index) => (\r\n                    <TextField\r\n                      key={index}\r\n                      name={name}\r\n                      inputMode=\"numeric\"\r\n                      pattern=\"[0-9]*\"\r\n                      placeholder=\"0\"\r\n                      value={code.charAt(index)}\r\n                      onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        if (/^\\d*$/.test(value)) {\r\n                          setCode(code.substring(0, index) + value + code.substring(index + 1));\r\n                        }\r\n                      }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      sx={{\r\n                        backgroundColor: \"#f4f4f9\",\r\n                        borderRadius: 2,\r\n                        \"& .MuiOutlinedInput-root\": {\r\n                          \"& fieldset\": { borderColor: \"gray\" },\r\n                          \"&:hover fieldset\": { borderColor: \"blue\" },\r\n                          \"&.Mui-focused fieldset\": { borderColor: \"redRYB.main\" },\r\n                          \"&.Mui-error fieldset\": { borderColor: \"red\" },\r\n                        },\r\n                      }}\r\n                    />\r\n                  ))}\r\n                    </Box>\r\n                    {errorMsg && (\r\n                  <Typography color=\"error\" sx={{ marginTop: -2, marginBottom: 1,  width: '100%' }}>\r\n                    {errorMsg}\r\n                  </Typography>\r\n                )}\r\n                  </Box>\r\n                    )}\r\n                    {activeStep === 2 && (\r\n                    <Box display=\"flex\" flexDirection=\"column\" gap={2}>\r\n                        <TextField\r\n                        name=\"password\"\r\n                        label=\"New Password\"\r\n                        value={password}\r\n                        onChange={(e) => setpassword(e.target.value)}\r\n                        type={passwordVisible ? \"text\" : \"password\"}\r\n                        placeholder=\"Enter your new password\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        sx={{\r\n                          backgroundColor: \"#f4f4f9\",\r\n                          borderRadius: 2,\r\n                          \"& .MuiOutlinedInput-root\": {\r\n                            \"& fieldset\": { borderColor: \"gray\" },\r\n                            \"&:hover fieldset\": { borderColor: \"blue\" },\r\n                            \"&.Mui-focused fieldset\": { borderColor: \"redRYB.main\" },\r\n                            \"&.Mui-error fieldset\": { borderColor: \"red\" },\r\n                          },\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IconButton\r\n                                onClick={() => setPasswordVisible(!passwordVisible)}\r\n                                edge=\"end\"\r\n                              >\r\n                                {passwordVisible ? (\r\n                                  <RemoveRedEyeIcon />\r\n                                ) : (\r\n                                  <VisibilityOffIcon />\r\n                                )}\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}                       \r\n                        />\r\n                        <TextField\r\n                        name=\"confirmPassword\"\r\n                        label=\"Confirm Password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        type={passwordVisible1 ? \"text\" : \"password\"}\r\n                        placeholder=\"Repeat your new password\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        error={!!errorMsg}  \r\n                        helperText={errorMsg}\r\n                        sx={{\r\n                          backgroundColor: \"#f4f4f9\",\r\n                          borderRadius: 2,\r\n                          \"& .MuiOutlinedInput-root\": {\r\n                            \"& fieldset\": { borderColor: \"gray\" },\r\n                            \"&:hover fieldset\": { borderColor: \"blue\" },\r\n                            \"&.Mui-focused fieldset\": { borderColor: \"redRYB.main\" },\r\n                            \"&.Mui-error fieldset\": { borderColor: \"red\" },\r\n                          },\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IconButton\r\n                                onClick={() => setPasswordVisible1(!passwordVisible1)}\r\n                                edge=\"end\"\r\n                              >\r\n                                {passwordVisible1 ? (\r\n                                  <RemoveRedEyeIcon />\r\n                                ) : (\r\n                                  <VisibilityOffIcon />\r\n                                )}\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                        />\r\n                    </Box>   \r\n                    )}\r\n              </Box>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isLoading}\r\n                fullWidth\r\n                sx={{\r\n                  mt: 3,\r\n                  py: 1.5,\r\n                  backgroundColor: \"redRYB.main\",\r\n                  \"&:hover\": {\r\n                    backgroundColor: \"#b71c1c\",\r\n                  },\r\n                }}\r\n              >\r\n                  {isLoading ? 'Enviando...' : (activeStep === 2 ? 'Change Password' : 'Next')}\r\n              </Button>\r\n                </form>\r\n                <FormDivider />\r\n                {/* Social login buttons */}\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\", // Cambiado a \"row\" para que los elementos estén uno al lado del otro\r\n                    marginTop: 2,\r\n                  }}\r\n                >\r\n                </Box>\r\n              </Box>\r\n            </motion.div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={false}\r\n            md={6}\r\n            sx={{\r\n              height: \"100vh\",\r\n            }}\r\n          >\r\n            <motion.div\r\n              variants={varFade().in}\r\n              style={{\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <Box\r\n               sx={{\r\n                height: \"100%\",\r\n                backgroundImage: `url(${BackgroundImage})`,\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                position: \"relative\",\r\n                display: { xs: \"none\", md: \"block\" }, // Oculta la imagen en pantallas pequeñas\r\n              }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    top: \"50%\",\r\n                    left: \"50%\",\r\n                    transform: \"translate(-50%, -50%)\",\r\n                    zIndex: 2,\r\n                    textAlign: \"center\",\r\n                    color: \"white\",\r\n                    display: { xs: \"none\", md: \"block\" }, // Oculta el texto en pantallas pequeñas\r\n                  }}\r\n                >\r\n                  <motion.div\r\n                    initial=\"initial\"\r\n                    animate=\"animate\"\r\n                    exit=\"exit\"\r\n                    variants={varRotate().in}\r\n                  >\r\n                    <Typography\r\n                      variant=\"h2\"\r\n                      fontWeight=\"bold\"\r\n                      sx={{ fontSize: { xs: \"1.5rem\", sm: \"3rem\" } }}\r\n                    >\r\n                      Transform Your Body, Transform Your Life\r\n                    </Typography>\r\n                  </motion.div>\r\n                </Box>\r\n              </Box>\r\n            </motion.div>\r\n          </Grid>\r\n        </Grid>\r\n       </>\r\n      ); \r\n}\r\n\r\nexport default ForgotPassword;"],"names":["metadata","title","CONFIG","appName","ForgotPassword","requestPasswordCode","verifyCode","changePassword","useVerification","activeStep","setActiveStep","useState","passwordVisible","setPasswordVisible","passwordVisible1","setPasswordVisible1","errorMsg","setErrorMsg","enqueueSnackbar","useSnackbar","email","setEmail","code","setCode","password","setpassword","confirmPassword","setConfirmPassword","isLoading","setIsLoading","navigate","useNavigate","emailRegex","passwordRegex","handleNext","prevActiveStep","validateEmail","test","validateCode","trim","length","validatePassword","handleSubmit","e","preventDefault","log","response","data","message","variant","codeError","passwordError","error","console","errorMessage","_Fragment","children","_jsx","Helmet","_jsxs","Grid","container","sx","overflow","maxHeight","xs","sm","item","md","display","justifyContent","alignItems","padding","backgroundColor","motion","div","initial","animate","exit","variants","varBounce","in","Box","maxWidth","width","borderRadius","boxShadow","varRotate","src","Logo","alt","style","margin","border","height","Typography","component","color","fontSize","textAlign","fontWeight","textTransform","marginY","onSubmit","flexDirection","gap","TextField","name","label","placeholder","value","onChange","target","InputLabelProps","shrink","fullWidth","helperText","borderColor","lg","map","index","inputMode","pattern","charAt","substring","marginTop","marginBottom","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","RemoveRedEyeIcon","VisibilityOffIcon","Button","disabled","mt","py","FormDivider","varFade","backgroundImage","BackgroundImage","backgroundSize","backgroundPosition","top","left","transform","zIndex"],"mappings":"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"}