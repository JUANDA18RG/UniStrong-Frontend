{"version":3,"file":"Routines.2d21ad71.js","sources":["../../node_modules/@mui/icons-material/esm/FitnessCenter.js","../../src/components/Routines.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20.57 14.86 22 13.43 20.57 12 17 15.57 8.43 7 12 3.43 10.57 2 9.14 3.43 7.71 2 5.57 4.14 4.14 2.71 2.71 4.14l1.43 1.43L2 7.71l1.43 1.43L2 10.57 3.43 12 7 8.43 15.57 17 12 20.57 13.43 22l1.43-1.43L16.29 22l2.14-2.14 1.43 1.43 1.43-1.43-1.43-1.43L22 16.29z\"\n}), 'FitnessCenter');","import React, { useState, useEffect } from 'react';\r\nimport {FitnessCenter } from '@mui/icons-material';\r\nimport { Card, Grid, CardContent, Typography, Stack, Dialog, DialogActions, DialogContent, DialogTitle, Button } from \"@mui/material\";\r\nimport { TraerRutinasUsuario } from \"../api/Ejericios\";\r\nimport { useAuth } from \"../context/authContext\";\r\n\r\nconst Routines = () => {\r\n  \r\n  const [selectedRutina, setSelectedRutina] = useState(null);\r\n  const [rutinas, setRutinas] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  const { User } = useAuth();\r\n  const id = User?.id;\r\n  \r\n  const handleCardClick = (rutina) => {\r\n    setSelectedRutina(rutina);\r\n    setDialogOpen(true);  \r\n  };\r\n  \r\n  const handleCloseDialog = () => {\r\n    setDialogOpen(false) \r\n  };\r\n\r\n  \r\n  \r\n  const obtenerRutinas = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await TraerRutinasUsuario(id);\r\n      const responseData = response.data;\r\n      if (Array.isArray(responseData)) {\r\n        console.log('Rutinas:', response);\r\n        console.log('Rutinas obtenidas:', responseData);\r\n        setRutinas(responseData);\r\n      } else {\r\n        console.error('La respuesta no es un arreglo válido:', response);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al obtener rutinas:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    obtenerRutinas();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={3}\r\n        sx={{\r\n          padding: 5,\r\n          minHeight: '100vh',\r\n          backgroundColor: 'common.black',\r\n          paddingTop: '100px',\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          gutterBottom color=\"redRYB.main\"\r\n          sx={{ marginTop: '50px' }}\r\n        >\r\n          Biblioteca de Rutinas\r\n        </Typography>\r\n        <Stack\r\n          sx={{\r\n            width: '100%',\r\n            minHeight: '100vh',\r\n            backgroundColor: 'white',\r\n            padding: 5,\r\n            borderRadius: '8px',\r\n            marginTop: '20px',\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <Typography variant=\"h6\"  gutterBottomcolor=\"redRYB.main\"\r\n             sx={{ textAlign: 'center'}}>\r\n              Cargando rutinas...\r\n            </Typography>\r\n          ) : (\r\n            <Grid container spacing={3} justifyContent=\"center\">\r\n              {rutinas.length === 0 ? (\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h5\"  gutterBottom\r\n                   color=\"redRYB.main\" sx={{ textAlign: 'center'}}>\r\n                    No se encontraron rutinas\r\n                  </Typography>\r\n                </Grid>\r\n              ) : (\r\n                rutinas.map((rutina) => (\r\n                  <Grid item xs={12} sm={6} md={3} key={rutina.id}>\r\n                    <Card\r\n                      sx={{\r\n                        maxWidth: 360,\r\n                        boxShadow: 4,\r\n                        borderRadius: 1,\r\n                        border: '2px solid',\r\n                        borderColor: \"redRYB.main\",\r\n                        transition: 'transform 0.2s, box-shadow 0.2s',\r\n                        '&:hover': {\r\n                          boxShadow: 6,\r\n                          transform: 'scale(1.05)',\r\n                        },\r\n                      }}\r\n                      onClick={() => handleCardClick(rutina)}\r\n                    >\r\n                    <CardContent sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', padding: 2 }}>\r\n                    <FitnessCenter sx={{ fontSize: 30, marginBottom: 1, color: 'redRYB.main' }} />\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      sx={{fontWeight: 'bold', textAlign: 'center', fontSize: '1.5rem',marginBottom: 1,}}\r\n                    >\r\n                    {rutina.name}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      sx={{color: 'black',textAlign: 'center', fontSize: '1.25rem', marginBottom: 2, fontStyle: 'italic',}}\r\n                    >\r\n                      {rutina.category}\r\n                    </Typography>\r\n                  </CardContent>\r\n                   </Card>\r\n                  </Grid>\r\n                ))\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </Stack>\r\n        {/* Detalles*/}\r\n        <Dialog open={dialogOpen} onClose={handleCloseDialog}>\r\n          <DialogTitle  gutterBottom  color=\"redRYB.main\" sx={{ fontWeight: 'bold', fontSize: '1.25rem', textAlign: 'center' }}>\r\n            {selectedRutina?.name}\r\n          </DialogTitle>\r\n          <DialogContent sx={{ padding: 3, minWidth: 400 }}>\r\n            <Typography variant=\"body1\" sx={{ lineHeight: 1.6, fontSize: '1rem', color: '#555', marginBottom: 2}}>\r\n            <strong>Descripción:</strong> {selectedRutina?.description}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ lineHeight: 1.6, fontSize: '1rem', color: '#555', marginBottom: 2 }}>\r\n            <strong>Categoría:</strong> {selectedRutina?.category}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ lineHeight: 1.6, fontSize: '1rem', color: '#555', marginBottom: 1 }}>\r\n            <strong>Músculos trabajados:</strong>\r\n            <ul>\r\n              {selectedRutina?.musclesWorked?.map((muscle, index) => (\r\n                <li key={index}>{muscle}</li>\r\n              ))}\r\n            </ul>\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\" sx={{ lineHeight: 1.6, fontSize: '1rem', color: '#555', marginBottom: 2 }}>\r\n            <strong>Dias:</strong> {selectedRutina?.recurrenceDay}\r\n            </Typography>\r\n\r\n          </DialogContent>\r\n          <DialogActions sx={{ padding: 2, justifyContent: 'center'}}>\r\n            <Button\r\n              onClick={handleCloseDialog}  \r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              sx={{ borderRadius: '18px', padding: '6px 16px', backgroundColor: 'redRYB.main',\r\n                '&:hover': {\r\n                  backgroundColor: 'darkred', \r\n                }\r\n              }}\r\n            >\r\n              Cerrar\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routines;\r\n\r\n\r\n"],"names":["FitnessCenter","createSvgIcon","_jsx","Routines","selectedRutina","setSelectedRutina","useState","rutinas","setRutinas","loading","setLoading","dialogOpen","setDialogOpen","User","useAuth","id","handleCardClick","rutina","handleCloseDialog","obtenerRutinas","response","TraerRutinasUsuario","responseData","data","Array","isArray","log","error","useEffect","_Fragment","children","Stack","spacing","sx","padding","minHeight","backgroundColor","paddingTop","Typography","variant","gutterBottom","color","marginTop","width","borderRadius","gutterBottomcolor","textAlign","Grid","container","justifyContent","length","item","xs","map","sm","md","Card","maxWidth","boxShadow","border","borderColor","transition","transform","onClick","CardContent","display","flexDirection","alignItems","fontSize","marginBottom","fontWeight","name","fontStyle","category","_jsxs","Dialog","open","onClose","DialogTitle","DialogContent","minWidth","lineHeight","description","musclesWorked","muscle","index","recurrenceDay","DialogActions","Button"],"mappings":"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"}